//=================================================================================
// MessageBar.hpp
// Author: Tyler George
// Date  : September 21, 2015
//=================================================================================

#pragma once

#ifndef __included_MessageBar__
#define __included_MessageBar__

///---------------------------------------------------------------------------------
/// Includes
///---------------------------------------------------------------------------------
#include "Engine/Input/InputSystem.hpp"
#include "Engine/Renderer/OpenGLRenderer.hpp"
#include "Engine/Renderer/FontRenderer.hpp"
#include "Entities/Player.hpp"

#include <queue>

///---------------------------------------------------------------------------------
/// Structs
///---------------------------------------------------------------------------------
struct Message
{
    std::string m_text;
    std::string m_instigator;
    MapPosition m_position;
    int m_playerTurn;
};

///---------------------------------------------------------------------------------
/// Typedefs
///---------------------------------------------------------------------------------
typedef std::vector< Message > Messages;

////===========================================================================================
///===========================================================================================
// MessageBar Class
///===========================================================================================
////===========================================================================================
class MessageBar
{
public:
    ///---------------------------------------------------------------------------------
    /// Constructors/Destructors
    ///---------------------------------------------------------------------------------
    ~MessageBar();

    ///---------------------------------------------------------------------------------
    /// Initialization
    ///---------------------------------------------------------------------------------
    static void Startup( Player* player, Font* font );

    ///---------------------------------------------------------------------------------
    /// Accessors/Queries
    ///---------------------------------------------------------------------------------
    static bool HasMoreMessages() { return s_theMessageBar->m_moreMessages; }

    ///---------------------------------------------------------------------------------
    /// Mutators
    ///---------------------------------------------------------------------------------
    static void AddMessage( Message& msg );
    static void SetClearCurrent( bool clearCurrent ) { s_theMessageBar->m_clearCurrent = clearCurrent; }

    static void TestMessages();

    ///---------------------------------------------------------------------------------
    /// Update
    ///---------------------------------------------------------------------------------
    static void ProcessInput( InputSystem* inputSystem, const double& deltaSeconds );
    static void Update( const double& deltaSeconds, const bool& debugModeEnabled );

    ///---------------------------------------------------------------------------------
    /// Render
    ///---------------------------------------------------------------------------------
    static void Render( OpenGLRenderer* renderer, FontRenderer* fontRenderer, const Font& font, const unsigned int& shaderID, bool debugModeEnabled );

    ///---------------------------------------------------------------------------------
    /// Public Member Variables
    ///---------------------------------------------------------------------------------

    ///---------------------------------------------------------------------------------
    /// Static Variables
    ///---------------------------------------------------------------------------------


private:
    ///---------------------------------------------------------------------------------
    /// Private Functions
    ///---------------------------------------------------------------------------------
    MessageBar();

    ///---------------------------------------------------------------------------------
    /// Private Member Variables
    ///---------------------------------------------------------------------------------
    Player* m_player;
    Font* m_font;

    std::queue< Message > m_pendingMessages;
    Messages m_currentMessages;
    Messages m_archivedMessages;

    bool m_clearCurrent;
    bool m_moreMessages;

    ///---------------------------------------------------------------------------------
    /// Private Static Member Variables
    ///---------------------------------------------------------------------------------
    static MessageBar* s_theMessageBar;
};

///---------------------------------------------------------------------------------
/// Inline function implementations
///---------------------------------------------------------------------------------

#endif