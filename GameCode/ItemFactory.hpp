//=================================================================================
// ItemFactory.hpp
// Author: Tyler George
// Date  : September 10, 2015
//=================================================================================

#pragma once

#ifndef __included_ItemFactory__
#define __included_ItemFactory__

///---------------------------------------------------------------------------------
/// Includes
///---------------------------------------------------------------------------------
#include <map>

#include "Engine\Utilities\XMLParser.h"
#include "Engine\Math\IntRange.hpp"

#include "GameCode\Entities\Item.hpp"

class ItemFactory;

///---------------------------------------------------------------------------------
/// Typedefs
///---------------------------------------------------------------------------------
typedef std::map< std::string, ItemFactory* > ItemFactories;

////===========================================================================================
///===========================================================================================
// ItemFactory Class
///===========================================================================================
////===========================================================================================
class ItemFactory
{
public:
    ///---------------------------------------------------------------------------------
    /// Constructors/Destructors
    ///---------------------------------------------------------------------------------
    ItemFactory( XMLNode& ItemNode );
    ~ItemFactory();

    ///---------------------------------------------------------------------------------
    /// Initialization
    ///---------------------------------------------------------------------------------
    static bool LoadAllItemFactories();

    ///---------------------------------------------------------------------------------
    /// Accessors/Queries
    ///---------------------------------------------------------------------------------
    static ItemFactory* FindFactoryByName( const std::string& name );
    static ItemFactories& GetFactories() { return s_itemFactories; }

    Item* SpawnItem( const XMLNode& possibleSaveData );

    ///---------------------------------------------------------------------------------
    /// Mutators
    ///---------------------------------------------------------------------------------

    ///---------------------------------------------------------------------------------
    /// Update
    ///---------------------------------------------------------------------------------

    ///---------------------------------------------------------------------------------
    /// Render
    ///---------------------------------------------------------------------------------

    ///---------------------------------------------------------------------------------
    /// Public Member Variables
    ///---------------------------------------------------------------------------------

    ///---------------------------------------------------------------------------------
    /// Static Variables
    ///---------------------------------------------------------------------------------

private:
    ///---------------------------------------------------------------------------------
    /// Private Member Variables
    ///---------------------------------------------------------------------------------


protected:

    ///---------------------------------------------------------------------------------
    /// Protected Static Variables
    ///---------------------------------------------------------------------------------
    static ItemFactories s_itemFactories;

    ///---------------------------------------------------------------------------------
    /// Protected Member Variables
    ///---------------------------------------------------------------------------------
    Item* m_templateItem;
};

///---------------------------------------------------------------------------------
/// Inline function implementations
///---------------------------------------------------------------------------------

#endif